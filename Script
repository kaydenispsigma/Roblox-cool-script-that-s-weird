local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

-- Create ScreenGui
local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui

-- Create Chat TextBox
local chatBox = Instance.new("TextBox")
chatBox.Size = UDim2.new(0, 200, 0, 50)
chatBox.Position = UDim2.new(0.5, -100, 0, 70)
chatBox.PlaceholderText = "Type here..."
chatBox.Parent = screenGui

-- Send message function
local function sendMessage(text)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

-- Handle chatbox input
chatBox.FocusLost:Connect(function()
    local chatText = chatBox.Text
    if chatText and chatText ~= "" then
        sendMessage(chatText) -- Send message to new chat system
        chatBox.Text = "" -- Clear text after sending
    end
end)

-- Loadstring command
local function executeLoadstring(scriptCode)
    local success, result = pcall(loadstring(scriptCode))
    if success then
        print("Script executed successfully.")
    else
        print("Error executing script: " .. result)
    end
end

-- Death animation logic
local animations = {
    "13123760883", "13123772558", "13123778553", "13123786180"
}

local function die(msg)
    if msg == "die" then
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.Health = 0
                if humanoid.Health == 0 then
                    for _, deathAnimation in ipairs(animations) do
                        local animation = Instance.new("Animation")
                        animation.AnimationId = "rbxassetid://" .. deathAnimation
                        local animator = humanoid:FindFirstChildOfClass("Animator")
                        if animator then
                            animator:LoadAnimation(animation):Play()
                        end
                    end
                end
            end
        end
    end
end

-- Listen for chat messages
player.Chatted:Connect(function(message)
    local args = message:split(" ")
    local command = args[1]:lower()

    -- Handle "die" command
    if command == "die" then
        die("die")
    end

    -- Handle "loadstring" command
    if command == "loadstring" and args[2] then
        local scriptCode = table.concat(args, " ", 2)
        executeLoadstring(scriptCode)
    end

    -- Handle "kill <user>" command
    if command == "kill" and args[2] then
        local targetName = args[2]
        for _, target in ipairs(Players:GetPlayers()) do
            if target.Name:lower():sub(1, #targetName) == targetName:lower() then
                local targetCharacter = target.Character
                local localCharacter = player.Character
                if targetCharacter and localCharacter then
                    local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
                    local localHRP = localCharacter:FindFirstChild("HumanoidRootPart")
                    if targetHRP and localHRP then
                        -- Continuously teleport and spin localplayer
                        while targetCharacter.Parent do
                            localHRP.CFrame = targetHRP.CFrame * CFrame.new(0, 0, 0)
                            localHRP.CFrame = localHRP.CFrame * CFrame.Angles(0, math.rad(500), 0) -- Extreme spin
                            localHRP.Velocity = Vector3.new(0, 100, 0) -- Fling force
                            wait(0.05)
                        end
                    end
                end
            end
        end
    end
end)
